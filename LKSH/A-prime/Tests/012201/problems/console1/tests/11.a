                     A Basic FidoNet(r) Technical Standard
    This FTS  (FidoNet(r)  Technical  Standard)  specifies  a  standard  for
    the FidoNet community. FidoNet nodes are expected to adopt and implement
    Fido and FidoNet are registered marks of Tom Jennings and Fido Software.
    FidoNet  has  grown  beyond  most  peoples' fantasies, and  new  FidoNet
    made  implementation  difficult.   FidoNet, in its desire to promote and
    encourage  FidoNet  implementations,  suggested  a  project  to create a
    technical  standard for  FidoNet.  The author did not  design or specify
    which a FidoNet implementation must provide.  The implementor of FidoNet
    has been used to view FidoNet from a standard perspective.  As with most
    prospective  ISO/OSI  descriptions, FidoNet  does not always  make  this
   1. Basic Requirements for a FidoNet Implementation
      it safe to list a net or node in the FidoNet nodelist. In other words,
      A FidoNet implementation must be able to call other nodes and transfer
      A FidoNet implementation must be able to accept calls from other nodes
      FidoNet implementations must be able to receive and process the FidoNet
      document,  FTS-0005, defines the FidoNet format nodelist  and  how  to
      A  FidoNet implementation must route messages which do not have  files
      attached through net hosts as shown in a FidoNet format nodelist.
      This  documents represents the  most basic FidoNet implementation.   A
      seriously   consider   them.   SEAdog(tm),  from  System   Enhancement
      Associates,  is  an  excellent  example  of such an  extended  FidoNet
      systems is at the lowest level.
      For  historical  reasons,  the  term  packet  is used  in  FidoNet  to
      unit of communication, which is known as a block in FidoNet.
    The application layer is outside the domain of a FidoNet standard, as it
    is the layer that the user's application sees as opposed to what FidoNet
    description  of the data structure, the message as it is stored by Fido,
    SEAdog, and Rover.
    Perfectly valid FidoNet systems may be implemented whose stored messages
                   cost              (? in lowest unit of originator's
      DayOfMonth = "01" | "02" | "03" | ... | "31"   (? Fido 0 fills ?)
                        6       Orphan
      1  - Fido does not necessarily terminate the message text with a Null,
           but  uses  an empty line (0DH 0AH 0DH 0AH).  Some  Fido utilities
      2 - SEAdog zeros the message cost field when building a message.
      4 - SEAdog uses a different format for dates, e.g.
                   (? SEAdog format Mon  1 Jan 86 02:34 ?)
      At  the application level, FidoNet imposes few protocol  requirements.
      node-to-node  FidoNet  connections.   Some implementations do this  in
      The ability to send to and receive from any FidoNet listed node during
      critical  to FidoNet.  A packed  message has a number of fixed  length
                     cost              (? in lowest unit of originator's
 D. Session Layer Protocol : Connecting to Another FidoNet Machine
    A session is a connection between two FidoNet machines.  It is currently
   | S3  | WaitClear| 1 no input for 0.5 secs | send TSYNCH = AEH       | S4  |
   |     |          | 3 over 30 seconds       | hang up report not Fido | exit|
   | S5  | CheckMail| 1 XMODEM successful     | (Fido registers success)| S6  |
   |     |          | 2 60 seconds timeout    | hang up, report not Fido| exit|
      FidoNet   does  not  necessarily  send  a  message  directly  to   its
        host  of the destination  node's  subnet  as specified  by a FidoNet
      its definition is critical to FidoNet.
                     prodCode   (? 0 for Fido, write to FTSC for others ?)
      PacketType   = 02H 00H  (? 01H 00H was used by Fido versions before 10
      prodCode     = (  00H      (? Fido ?)
      When  a  file is transferred via  FidoNet, an attempt is made to  also
      modification  date, etc.  FidoNet does this via a special prefix block
    Although  one second timeouts are used successfully by Fido and  SEAdog,
 H. Physical Layer : the Actual Connection of Two FidoNet Systems
        Fido-12 and Dutchie
    Fido and FidoNet are registered trademarks of Tom Jennings.
    SEAdog is a trademark of System Enhancement Associates.
    Henderson, Thom, "SEAdog Electronic Mail System Version 3" of April 86
    International  Standards Organization,  "Data Processing - Open  Systems
    Jennings,   Tom,  "FidoNet  Electronic  Mail  Protocol"  8  February  85
    Jennings,   Tom,  "Fido's  Internal  Structures"  of  13  September  85
    Messages generated by Fido 11w, SEAdog 3.8, and QMail 1.01
